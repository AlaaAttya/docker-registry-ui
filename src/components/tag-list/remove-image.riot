<!--
Copyright (C) 2016-2021 Jones Magloire @Joxit

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.
-->
<remove-image>
  <material-button waves-center="true" rounded="true" waves-color="#ddd" title="This will delete the image."
    if="{ !props.multiDelete }" disabled="{ !state.digest }" onClick="{ deleteImage }">
    <i class="material-icons">delete</i>
  </material-button>
  <material-checkbox if="{ props.multiDelete }" title="Select this tag to delete it." disabled="{ !state.digest }"
    onChange="{ handleCheckboxChange }">
  </material-checkbox>
  <script>
    import {
      Http
    } from '../../scripts/http';
    import router from '../../scripts/router'
    export default {
      onBeforeMount(props, state) {
        props.image.one('content-digest', (digest) => {
          this.update({
            digest
          });
        });
        props.image.trigger('get-content-digest');
      },
      deleteImage(ignoreError) {
        // registryUI.taglist.go(name);
        deleteImage(this.props.image, this.props.registryUrl, ignoreError)
      },
      handleCheckboxChange(checked) {
        this.props.handleCheckboxChange(checked, this.props.image);
      }
    }

    export function deleteImage(image, registryUrl, ignoreError) {
      if (!image.digest) {
        // registryUI.snackbar('Information for ' + name + ':' + tag + ' are not yet loaded.');
        return;
      }
      const name = image.name;
      const tag = image.tag;
      const oReq = new Http();
      oReq.addEventListener('loadend', function () {
        if (this.status == 200 || this.status == 202) {
          router.taglist(name);
          // registryUI.snackbar('Deleting ' + name + ':' + tag +
          //   ' image. Run `registry garbage-collect config.yml` on your registry');
        } else if (this.status == 404) {
          // ignoreError || registryUI.errorSnackbar('Digest not found for this image in your registry.');
        } else {
          // registryUI.snackbar(this.responseText);
        }
      });
      oReq.open('DELETE', registryUrl + '/v2/' + name + '/manifests/' + image.digest);
      oReq.setRequestHeader('Accept',
        'application/vnd.docker.distribution.manifest.v2+json, application/vnd.oci.image.manifest.v1+json');
      oReq.addEventListener('error', function () {
        registryUI.errorSnackbar(
          'An error occurred when deleting image. Check if your server accept DELETE methods Access-Control-Allow-Methods: [\'DELETE\'].'
        );
      });
      oReq.send();
    }
  </script>
</remove-image>